apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backstage-ingress
  namespace: backstage
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # SSL/TLS with cert-manager
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Additional optimizations
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60s"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60s"
    
    # Rate limiting (optional)
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - your-domain.com
    - auth.your-domain.com
    secretName: backstage-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backstage-server-service
            port:
              number: 80
  - host: auth.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backstage-auth-service
            port:
              number: 80

---
# Alternative: LoadBalancer service for direct access without ingress
apiVersion: v1
kind: Service
metadata:
  name: backstage-server-lb
  namespace: backstage
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "backstage-server-lb"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-protocol: "http"
spec:
  type: LoadBalancer
  selector:
    app: backstage-server
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: backstage-auth-lb
  namespace: backstage
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "backstage-auth-lb"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-path: "/health"
    service.beta.kubernetes.io/do-loadbalancer-healthcheck-protocol: "http"
spec:
  type: LoadBalancer
  selector:
    app: backstage-auth
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 4000