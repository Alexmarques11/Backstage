name: Docker Build & Deploy

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
      - '.github/workflows/docker-deploy.yml'
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backstage-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test-docker-image:
    runs-on: ubuntu-latest
    needs: build-and-push
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Test Docker Compose setup
      working-directory: backend
      run: |
        # Start services
        docker compose up -d
        sleep 15
        
        # Test endpoints
        curl -f http://localhost:13000/setup
        curl -f http://localhost:13000/
        
        # Cleanup
        docker compose down

  # Uncomment and configure for actual deployment
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build-and-push, test-docker-image]
  #   if: github.ref == 'refs/heads/main'
  #   environment: production
  #   
  #   steps:
  #   - name: Deploy to production
  #     run: |
  #       # Add your deployment commands here
  #       # For example, SSH to server and pull/restart containers
  #       echo "Deploy to production server"