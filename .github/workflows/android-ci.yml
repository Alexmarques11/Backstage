name: Android CI

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'backstage_frontend/**'
      - '.github/workflows/android-ci.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'backstage_frontend/**'
      - '.github/workflows/android-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Accept Android SDK licenses
      run: yes | sdkmanager --licenses || true

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.13

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Fix Gradle wrapper
      working-directory: backstage_frontend
      run: |
        # Download gradle-wrapper.jar if missing
        if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
          echo "Downloading gradle-wrapper.jar..."
          mkdir -p gradle/wrapper
          curl -L -o gradle/wrapper/gradle-wrapper.jar \
            "https://github.com/gradle/gradle/raw/v8.1.3/gradle/wrapper/gradle-wrapper.jar"
        fi
        chmod +x gradlew

    - name: Run unit tests
      working-directory: backstage_frontend
      run: ./gradlew test --no-daemon --stacktrace

    - name: Run lint checks
      working-directory: backstage_frontend
      run: ./gradlew lint --no-daemon --stacktrace

    - name: Build debug APK
      working-directory: backstage_frontend
      run: ./gradlew assembleDebug --no-daemon --stacktrace

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: backstage_frontend/app/build/outputs/apk/debug/*.apk

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: backstage_frontend/app/build/reports/tests/

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: backstage_frontend/app/build/reports/lint-results-debug.html

  # Comment out instrumented tests for now due to complexity
  # You can uncomment and modify when needed
  # instrumented-tests:
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Setup JDK 11
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '11'
  #       distribution: 'temurin'
  #   - name: Setup Android SDK
  #     uses: android-actions/setup-android@v3
  #   - name: Accept Android SDK licenses
  #     run: yes | sdkmanager --licenses || true
  #   - name: Fix Gradle wrapper
  #     working-directory: backstage_frontend
  #     run: |
  #       if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
  #         mkdir -p gradle/wrapper
  #         curl -L -o gradle/wrapper/gradle-wrapper.jar \
  #           "https://github.com/gradle/gradle/raw/v8.1.3/gradle/wrapper/gradle-wrapper.jar"
  #       fi
  #       chmod +x gradlew
  #   - name: Enable KVM group perms
  #     run: |
  #       echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
  #       sudo udevadm control --reload-rules
  #       sudo udevadm trigger --name-match=kvm
  #   - name: Run instrumented tests
  #     uses: reactivecircus/android-emulator-runner@v2
  #     with:
  #       api-level: 30
  #       target: google_apis
  #       arch: x86_64
  #       profile: Nexus 6
  #       cores: 2
  #       ram-size: 4096M
  #       heap-size: 1024M
  #       disable-animations: true
  #       script: |
  #         cd backstage_frontend
  #         ./gradlew connectedAndroidTest --no-daemon --stacktrace